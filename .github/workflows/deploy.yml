name: Deploy to Production

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 15m
        envs: |
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          CLOVA_SPEECH_CLIENT_ID=${{ secrets.CLOVA_SPEECH_CLIENT_ID }}
          CLOVA_SPEECH_CLIENT_SECRET=${{ secrets.CLOVA_SPEECH_CLIENT_SECRET }}
          CLOVA_STUDIO_API_KEY=${{ secrets.CLOVA_STUDIO_API_KEY }}
        script: |
          set -euo pipefail

          APP_DIR="$HOME/melog"
          REPO_URL="https://github.com/team-melog/melog-be.git" 

          # 1) 앱 디렉터리 생성
          mkdir -p "$APP_DIR"

          cd "$APP_DIR"

          # 2) repo 초기화/갱신 (안전)
          if [ ! -d .git ]; then
            echo "[INIT] Cloning repository into $APP_DIR"
            git clone "$REPO_URL" .    
          else
            echo "[INFO] Repository exists. Fetching updates..."
            git fetch --all --prune
          fi

          # 3) 배포 대상 브랜치로 체크아웃 (여기선 main)
          git checkout main
          git pull --ff-only origin main

          # 4) 배포 스크립트 권한
          chmod +x scripts/deploy.sh

          # 5) 원격 환경변수(Secrets) 주입 → deploy.sh 실행
          ./scripts/deploy.sh
          
    - name: Deployment Status
      run: |
        echo "🚀 Deployment completed!"
        echo "📱 Application should be available at: http://${{ secrets.SERVER_HOST }}:8080"
