name: Deploy to Production

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 15m
        envs: |
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          CLOVA_SPEECH_CLIENT_ID=${{ secrets.CLOVA_SPEECH_CLIENT_ID }}
          CLOVA_SPEECH_CLIENT_SECRET=${{ secrets.CLOVA_SPEECH_CLIENT_SECRET }}
          CLOVA_STUDIO_API_KEY=${{ secrets.CLOVA_STUDIO_API_KEY }}
        script: |
          set -euo pipefail

          APP_DIR="$HOME/melog"
          REPO_URL="https://github.com/team-melog/melog-be.git"  # private이면 deploy key 또는 PAT 필요

          mkdir -p "$APP_DIR"
          cd "$APP_DIR"

          if [ ! -d .git ]; then
            echo "[INIT] Cloning repository into $APP_DIR"
            git clone "$REPO_URL" .
            git checkout main
          else
            echo "[INFO] Clean sync with origin/main"
            git fetch --all --prune
            # 로컬 변경/추적안된 파일 제거 → 항상 깨끗한 상태 확보
            git reset --hard origin/main
            git clean -fdx
            git checkout main
            git pull --ff-only origin main
          fi

          chmod +x scripts/deploy.sh
          ./scripts/deploy.sh

    - name: Deployment Status
      run: |
        echo "🚀 Deployment completed!"
        echo "📱 Application should be available at: http://${{ secrets.SERVER_HOST }}:8080"
