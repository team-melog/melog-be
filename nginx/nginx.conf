user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # HTTP 요청을 HTTPS로 리다이렉트
    server {
        listen 80;
        server_name melog508.duckdns.org;
        
        # Let's Encrypt 인증을 위한 경로
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 모든 HTTP 요청을 HTTPS로 리다이렉트
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS 서버 설정
    server {
        listen 443 ssl http2;
        server_name melog508.duckdns.org;
        
        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/melog508.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/melog508.duckdns.org/privkey.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS 설정
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # 프록시 설정
        location / {
            proxy_pass http://app:443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # 헬스체크 엔드포인트
        location /actuator/health {
            proxy_pass http://app:443/actuator/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
