-- V3: TTS 캐시 테이블 추가
-- 음성 생성 결과를 캐시하여 동일한 요청에 대한 중복 처리 방지

-- TTS 캐시 테이블 생성
-- 텍스트, 음성 타입, 감정 톤 조합을 키로 하여 생성된 TTS 파일 정보를 저장
CREATE TABLE melog.tts_cache (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    
    -- 캐시 키: 텍스트 + 음성타입 + 감정톤 정보의 해시값
    -- MD5 해시를 사용하여 32자리 문자열로 저장 (검색 성능 최적화)
    cache_key VARCHAR(255) NOT NULL,
    
    -- 원본 텍스트 (디버깅 및 관리 목적)
    original_text TEXT NOT NULL,
    
    -- 사용된 음성 타입 (VoiceType enum과 매핑)
    voice_type VARCHAR(50) NOT NULL,
    
    -- 음성 톤 설정 (VoiceToner 객체를 JSON 형태로 저장)
    voice_toner_json TEXT,
    
    -- S3에 저장된 TTS 파일의 URL
    s3_url VARCHAR(500) NOT NULL,
    
    -- 생성된 파일명
    file_name VARCHAR(255) NOT NULL,
    
    -- 파일 크기 (바이트 단위)
    file_size BIGINT,
    
    -- MIME 타입 (audio/mpeg, audio/wav 등)
    mime_type VARCHAR(100),
    
    -- 생성 시간
    created_at TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    
    -- 마지막 접근 시간 (캐시 만료 정책 수립용)
    last_accessed_at TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    
    -- 제약조건
    CONSTRAINT uk_tts_cache_key UNIQUE (cache_key),
    
    -- voice_type은 기존 VoiceType enum과 일치해야 함
    CONSTRAINT chk_voice_type CHECK (
        voice_type IN ('ARA', 'MIKYUNG', 'DAIN', 'YUNA', 'GOEUN', 'DAESUNG')
    )
);

-- 인덱스 생성 (검색 성능 최적화)
-- cache_key를 통한 빠른 조회를 위한 유니크 인덱스 (이미 제약조건으로 생성됨)
-- 캐시 정리 작업을 위한 시간 기반 인덱스
CREATE INDEX idx_tts_cache_created_at ON melog.tts_cache(created_at);
CREATE INDEX idx_tts_cache_last_accessed ON melog.tts_cache(last_accessed_at);

-- 복합 인덱스: 텍스트와 음성 타입 조합 검색용
CREATE INDEX idx_tts_cache_text_voice ON melog.tts_cache(voice_type, original_text);

-- 테이블 소유권 설정
ALTER TABLE melog.tts_cache OWNER TO melog;

-- 캐시 정리를 위한 뷰 생성 (30일 이상 미접근 캐시 대상)
-- 실제 정리 작업은 배치 작업으로 별도 구현 예정
CREATE VIEW melog.tts_cache_cleanup_candidates AS
SELECT id, cache_key, file_name, s3_url, last_accessed_at
FROM melog.tts_cache
WHERE last_accessed_at < CURRENT_TIMESTAMP - INTERVAL '30 days';

-- 뷰 소유권 설정
ALTER VIEW melog.tts_cache_cleanup_candidates OWNER TO melog;