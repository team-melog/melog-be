services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Clova App Common Configuration
      CLOVA_APP_URL: ${CLOVA_APP_URL:-https://naveropenapi.apigw.ntruss.com}
      CLOVA_APP_CLIENT_ID: ${CLOVA_APP_CLIENT_ID}
      CLOVA_APP_CLIENT_SECRET: ${CLOVA_APP_CLIENT_SECRET}
      # Clova Speech API Configuration
      CLOVA_SPEECH_URL: ${CLOVA_SPEECH_URL:-https://naveropenapi.apigw.ntruss.com}
      CLOVA_SPEECH_CLIENT_ID: ${CLOVA_SPEECH_CLIENT_ID}
      CLOVA_SPEECH_CLIENT_SECRET: ${CLOVA_SPEECH_CLIENT_SECRET}
      CLOVA_SPEECH_STT_ENDPOINT: ${CLOVA_SPEECH_STT_ENDPOINT:-/recog/v1/stt}
      CLOVA_SPEECH_DEFAULT_LANG: ${CLOVA_SPEECH_DEFAULT_LANG:-Kor}
      CLOVA_SPEECH_MAX_DURATION: ${CLOVA_SPEECH_MAX_DURATION:-60}
      CLOVA_SPEECH_SUPPORTED_FORMATS: ${CLOVA_SPEECH_SUPPORTED_FORMATS:-[mp3, aac, ac3, ogg, flac, wav]}
      CLOVA_SPEECH_TIMEOUT_MS: ${CLOVA_SPEECH_TIMEOUT_MS:-10000}
      # Clova Studio Configuration
      CLOVA_STUDIO_BASE_URL: ${CLOVA_STUDIO_BASE_URL:-https://clovastudio.stream.ntruss.com}
      CLOVA_STUDIO_API_KEY: ${CLOVA_STUDIO_API_KEY}
      CLOVA_STUDIO_MODEL: ${CLOVA_STUDIO_MODEL:-HCX-005}
      CLOVA_STUDIO_TIMEOUT_MS: ${CLOVA_STUDIO_TIMEOUT_MS:-8000}
      # Clova Voice API Configuration
      CLOVA_VOICE_TTS_ENDPOINT: ${CLOVA_VOICE_TTS_ENDPOINT:-/tts-premium/v1/tts}
      CLOVA_VOICE_SUPPORTED_FORMATS: ${CLOVA_VOICE_SUPPORTED_FORMATS:-[mp3, wav]}
      CLOVA_VOICE_TIMEOUT_MS: ${CLOVA_VOICE_TIMEOUT_MS:-20000}
      # Ncloud Object storage Configuration
      NCLOUD_ACCESS_KEY: ${NCLOUD_ACCESS_KEY}
      NCLOUD_SECRET_KEY: ${NCLOUD_SECRET_KEY}
      NCLOUD_S3_ENDPOINT: ${NCLOUD_S3_ENDPOINT}
      NCLOUD_S3_REGION: ${NCLOUD_S3_REGION}
      NCLOUD_S3_BUCKET: ${NCLOUD_S3_BUCKET}
      # SSL 인증서 설정
      DOMAIN_NAME: melog508.duckdns.org
      SERVER_PORT: 443


    ports:
      - "443:443"  # HTTPS 포트
    user: "0:0"  # root 권한으로 실행 (권한 문제 해결)
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro  # SSL 인증서 전체 디렉터리 마운트
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "-k", "https://localhost/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
